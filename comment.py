from telethon import TelegramClient, events
from telethon.tl.types import InputPeerChannel
import asyncio
import datetime
import time

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
API_ID = 28455545  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à API ID
API_HASH = '8558523fe78561ac521f42860fdaecf9'  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à API HASH
PHONE_NUMBER = '+79870995363'  # –í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
SESSION_NAME = 'userbot_session'

# –ö–∞–Ω–∞–ª—ã –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ (username –∏–ª–∏ ID)
TARGET_CHANNELS = ['@PodarokDurova']

# –í–∞—à –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
COMMENT_TEXT = "ogo"

# –í–∞—à ID –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π (–º–æ–∂–Ω–æ —É–∑–Ω–∞—Ç—å —É –±–æ—Ç–∞ @userinfobot)
YOUR_USER_ID = 7677719551

async def main():
    client = TelegramClient(SESSION_NAME, API_ID, API_HASH)
    await client.start(PHONE_NUMBER)
    
    print("–Æ–∑–µ—Ä–±–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –º–æ–Ω–∏—Ç–æ—Ä–∏—Ç –∫–∞–Ω–∞–ª—ã...")
    
    @client.on(events.NewMessage(chats=TARGET_CHANNELS))
    async def handler(event):
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –ø–æ—Å—Ç (–∞ –Ω–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∏–ª–∏ –¥—Ä—É–≥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ)
        if not event.is_channel or event.is_group:
            return
            
        post = event.message
        post_time = post.date
        
        # –ó–∞—Å–µ–∫–∞–µ–º –≤—Ä–µ–º—è –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
        start_time = time.time()
        
        try:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
            await client.send_message(
                entity=event.chat_id,
                message=COMMENT_TEXT,
                comment_to=post.id
            )
            
            # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
            end_time = time.time()
            reaction_time = end_time - start_time
            time_since_post = (datetime.datetime.now(datetime.timezone.utc) - post_time).total_seconds()
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–µ–±–µ –æ—Ç—á–µ—Ç
            report = (
                f"üìä –û—Ç—á–µ—Ç –æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏\n\n"
                f"üîó –ö–∞–Ω–∞–ª: {event.chat.title or event.chat_id}\n"
                f"üïí –í—Ä–µ–º—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –ø–æ—Å—Ç–∞: {post_time}\n"
                f"‚è± –í—Ä–µ–º—è —Ä–µ–∞–∫—Ü–∏–∏: {reaction_time:.2f} —Å–µ–∫\n"
                f"‚è≥ –í—Ä–µ–º—è —Å –º–æ–º–µ–Ω—Ç–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: {time_since_post:.2f} —Å–µ–∫\n"
                f"üìù –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {COMMENT_TEXT}"
            )
            
            await client.send_message(YOUR_USER_ID, report)
            
        except Exception as e:
            error_msg = f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {str(e)}"
            await client.send_message(YOUR_USER_ID, error_msg)
    
    await client.run_until_disconnected()

if __name__ == '__main__':
    asyncio.run(main())